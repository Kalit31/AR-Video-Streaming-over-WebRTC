https://github.com/njpietrow/Filter.io
https://github.com/tensorflow/tfjs-models/tree/master/body-segmentation
https://github.com/pion/awesome-pion



real-time quality - network

ffmpeg - encoding/decoding


base frame + delta diff  
h264 encoding 




client1             client2 
os.exec(ffmpeg)     os.exec(ffmpeg)


https://github.com/FFmpeg/FFmpeg
https://github.com/AlexEidt/Vidio
https://github.com/njpietrow/Filter.io
https://github.com/AgustinSRG/webrtc-video-filter
https://github.com/hybridgroup/cvscope/
https://github.com/ashellunts/ffmpeg-to-webrtc
https://github.com/pion/webrtc
https://github.com/pion/example-webrtc-applications
https://github.com/pion/example-webrtc-applications/tree/master/ffmpeg-send
https://github.com/asticode/go-astiav
https://jsfiddle.net/z17q28cd/

ffmpeg -f v4l2 -i /dev/video0 -f mpegts udp://224.0.0.251:5353

netstat -anu|sort -nk4

metric - time, energy consumption


Oct 16th - 
look up energy consumption models for mobile phones/edge devices

drain based on the processor/cpu/RAM - battery drain emulators/simulators - estimate of energy consumption for the program.

monitoring tools for battery drains 

TPUs = Tensor Processing Units

Tasks:
1. Look for other people working on same problem, google scholar 
2. explore AR Workload 
3. Volumetric videos - format, can handle with regular RTP?
4. battery savings?

ffmpeg -i input.webm -f mpegts udp://224.0.0.251:5353

/home/kalit/Desktop/GeorgiaTech/Fall_2024/CS_8903/WebRTC_research/ar-filters/filter_imgs/eye.jpg
/home/epl/Desktop/WebRTC_research/ar-filters/filter_imgs/eye.jpg
/home/epl/Desktop/WebRTC_research/ar-filters/filter_imgs/smile.png


AR workloads:
https://cuhksz-inml.github.io/full_scene_volumetric_video_dataset/factsfigures.html


Forward streams to localhost:5005 to jetson machine's localhost:5005 - 
ssh -L 5005:localhost:5005 -J fastvideo -i ~/.ssh/picluster epl@10.100.1.165